*ab-prefix* Vim plugin to conditionally expand abbreviations.

DESCRIPTION						       *ab-prefix.vim*

This plugin provides the ability to define abbreviations that expand only if a
particular prefix is matched.

Example:~

The command
>
    AbDef <buffer> \\\\ be beta
<
will define an insert mode expansion {be} that expands to {beta} ONLY if
preceded with a backslash.

This plugin was mainly written for use with |TeX| files, and the accompanying
|tex_abbrvs.vim| file provides lots of abbreviations that can be used as
examples.

								       *AbDef*

The function |AbDefineExpansion| (or the command |AbDef|) defines the required
expansion. It is called as follows: >

    AbDef iabargs prefix ab rep rrep gobble eval suffix
>
The arguments are as follows:

    {iabargs}	    Arguments passed to |iab| when defining the abbreviation
    {prefix}	    |regexp| that match before the abbreviation for
		    replacement to take place.
    {ab}	    The abbreviation.
    {rep}	    Replacement.
    {rrep}	    Optional right replacement (text to add after the cursor).
    {gobble}	    If provided and the character that triggers the
		    abbreviation matches this |regexp|, then it is gobbled.
    {eval}	    If true, {rep} and {rrep} are passed through |eval()|
		    before being used as replacements.
    {suffix}	    If provided, the character that triggers the abbreviation
		    must match this |regexp| before replacement is done. If a
		    {suffix} is provided, {gobble} is treated as a boolean
		    variable. If true, this character is gobbled.

The arguments {rrep} {gobble} {eval} and {suffix} are all optional and can be
omitted entirely. Any of these arguments can be set to {NONE} to explicitly
specify them as empty or unset.

							   *AbDefineExpansion*

This is the function version of |AbDef| command, with the same arguments.

							      *tex_abbrvs.vim*

This file provides numerous conditional abbreviations that are useful when
typing TeX documents.

Greek letters:~

    Use '\' followed by first two letters. Here are a few.

	Text		Replacement~

	\al	    	\alpha
	\be	    	\beta
	\ga	    	\gamma

    Etc. For upper case letters, just upper case the first letter (e.g. "\Si"
    produces "\Sigma").

    The "var" variants are as follows:

	Text		Replacement~

	\ve	    	\varepsilon
	\vt	    	\vartheta
	\vpi	    	\varpi
	\vr	    	\varrho
	\vs	    	\varsigma
	\vp	    	\varphi

    Dot/Tilde/Bar prefixes and suffixes:~

    All Greek letters can be prefixed or suffixed to obtain a \tilde, \bar,
    etc. version. Typing "\tal" results in "\tilde \alpha". Heres a list of
    prefixes and suffixes.

	Text		Replacement~
	\alt		\tilde \alpha
	\alh		\hat \alpha
	\alb		\bar \alpha
	\ald		\dot \alpha
	\aldd		\ddot \alpha
	
	\tial		\tilde \alpha
	\haal		\hat \alpha
	\baal		\bar \alpha
	\doal		\dot \alpha
	\ddal		\ddot \alpha

	\dal		\, d\alpha

    Of course, replacing "al" with "be" gets the above for beta, etc.

									 *Bab*

    To easily define your own "\" commands, use the Bab commands. This is
    equivalent to >

	AbDef  <buffer> \\\\ <args>

Environments:~

    Use '\' followed by the first two letters of the environment to get a
    complete environment. In the examples below the cursor is on the "X" after
    replacement.
    
	Text		Replacement~

	\beq<space>	\begin{equation}X
			\end{equation}

	\beq*		\begin{equation*}X
			\end{equation*}

	\beq\		\begin{equation}\label{X
			\end{equation}

	\beq[		\begin{equation}[X]
			\end{equation}

	\beq{		\begin{equation}{X}
			\end{equation}

    Here is a list of pre-defined environments. Most of them are obtained
    using a "\b" followed by the first two letters of the environment name.

	Abbreviation	Environment name ~

	\beq		equation
	\bal		align
	\bali		align
	\bga		gather
	\bfl		flalign
	\bml		multline
	\bmu		multline
	\bala		alignat
	\balat		alignat

	\bsp		split
	\bald		aligned
	\bgad		gathered
	\bca		cases
	\bdc		dcases
	\bdca		dcases
	\bmld		multlined
	\bmud		multlined

	\bpm		pmatrix
	\bma		matrix

	\bth		theorem
	\ble		lemma
	\bpp		proposition
	\bco		corollary
	\bconj		conjecture
	\bcj		conjecture
	\bde		definition
	\bre		remark
	\bex		example
	\bpr		proof

	\bdo		document
	\bce		center
	\brl		raggedleft
	\brr		raggedright
	\ben		enumerate
	\bit		itemize
	\bcen		compactenum
	\bcit		compactitem
	\bab		abstract
	\bmp		minipage
	\bmi		minipage
	\bquo		quote
	\bque		questions
	\bqu		quote
	\bpa		parts
	\bfi		figure

    It's also possible that the code was updated and not the documentation,
    so check the code for the definitive list...

    Environments without a close tag:~

    If you don't want the end tag inserted automatically, you can do it in
    stages. The first two letters of the environment name after "\begin{" or
    "\end{" will be expanded to the environment name. For instance, typing >

	\beg{eq}
<
    results in
>
	\begin{equation}
<
    Further, if you have the |tex_autoclose| ftplugin, then the text "\en" is
    automatically closes the last open environment.

    NOTE: The construct "$$" has been depreciated in LaTeX for a while now. So
    this plugin automatically replaces a "$$" with the equation* environment.


					       *Cenv* *Cenvf* *Cenvs* *Cenvfs*

    To create your own environments use the one of the |Cenv| commands. >

	Cenv {ab} {envname}
<
    To also set up a starred version use the |Cenvs| version. For the
    environment with fold markers automatically added, use use |Cenvf|.
    For both fold markers and the starred version use |Cenvfs|.

Standard spaces (like R^d, L^p, etc.):~

    Typing "R2" produces "R^2", unless preceded by an "^" or "_" in which case
    it produces "{R^2}". This also works for various spaces (Rd, Lp, etc.).
    This means you can type >

	\int_R2 \ab{f} \, d\la< \oo \text{for all $f \in L2$.}
<
    to produce >

	\int_{\R^2} \abs{f}^2 \, d\lambda < \infty \text{for all $f \in L^2$.}
<
    A list of spaces which are known are as follows:

	Abbreviation	Corresponding space:~

	Lp		L^p
	Lq		L^q
	Lr		L^r
	L1		L^1
	L2		L^2
	Loo		L^\infty

	lp		\ell^p
	lq		\ell^q
	lr		\ell^r
	l1		\ell^1
	l2		\ell^2
	loo		\ell^\infty

	Rd		\R^d
	Rn		\R^n
	R2		\R^2
	R3		\R^3
	R4		\R^4

	Hs		H^s
	H1		H^1
	H2		H^2
	Hm1		H^{-1}

    Following the abbreviation with a "(" will not produce the closing "}" (if
    any), which is usually what I want. Also, if some of these spaces are
    followed with a "{" then they don't produce an exponent. That is, typing
    "_Rd{" produces "_{\R^{", which is usually what I want.

									 *Sab*

    To define your own space, use the |Sab| command. The abbreviation for Rd
    above was produced by >

	Sab Rd \R^d \R^

Other commands:~

    Many commands can be expanded with "\" and the first two letters. Many
    time saving shorthands are defined. There are also predefined shortcuts
    for colors, references and parenthesis. A few are listed below:

	Text	    Replacement~

	\te	    \text{
	\tcr	    \textcolor{red}{

	eq~	    equation~\eqref{eqn
	Le~	    Lemma~\ref{lma
	Ths~	    Theorems~\ref{thm

	\pa	    \paren{
	\pab	    \paren[\big]{

    For a complete list, "Use the source, Luke".

>
 Maintainer : GI <gi1242@nospam.com> (replace nospam with gmail)
 Modified   : Sun 08 Mar 2015 09:35:12 PM EDT
 vim: ft=help:tw=78:iskeyword=!-~,^*,^|,^":ai:
